{

    "config_device": 
    {
		"test_base":
		{
			"path": "/api/1.0/discover/config/device",
			"response":
			{
				"deviceDefaultCredential": 
				{
					"username": "root",
					"password": "calvin"
 				}
			}
		},
		"test_default":
		{
			"auto_run": true,
			"description": "Check default credentials"
		}
    },

    "ips":
    {
		"test_base":
		{
			"path": "/api/1.0/discover/ips",
			"payload":
			{
				"credential": 
				{
					"userName": "root",
					"password": "calvin"
				},
				"deviceType": 
				[
					"SERVER",
					"CHASSIS"
				],
				"ips": 
				[
					"100.68.124.95",
					"100.68.124.98"
				]
				
			},
			"response":
			[
				{
					"deviceGroup": "SERVER",
					"discoveredDeviceList":
					[
						{
							"deviceName": "IDRAC8",
							"discovered": 1,
							"discoveredDeviceInfoList":
							[
								{
									"ipAddress": "100.68.124.95",
									"status": "SUCCESS"
								}
							]
						}
					]
				},
				{
					"deviceGroup": "CHASSIS",
					"discoveredDeviceList":
					[
						{
							"deviceName": "CMC_FX2",
							"discovered": 1,
							"discoveredDeviceInfoList":
							[
								{
									"ipAddress": "100.68.124.98",
									"status": "SUCCESS"
								}
							]
						}
					]
				}
			]
		},
		"test_server":
		{
			"auto_run": true,
			"description": "Only search for servers, check that it is found",
			"payload":
			{
				"deviceType": ["REMOVE : 1"],
				"ips": ["REMOVE : 1"]
			},
			"response": ["REMOVE : 1"]
		},
		"test_chassis":
		{
			"auto_run": true,
			"description": "Only search for chassis', check that it is found",
			"payload":
			{
				"deviceType": ["REMOVE : 0"],
				"ips": ["REMOVE : 0"]
			},
			"response": ["REMOVE : 0"]
		},
		"test_only_server_ip":
		{
			"auto_run": true,
			"description": "Search using only server ip, check that that it's found",
			"payload":
			{
				"REMOVE": ["credential", "deviceType"],
				"ips": ["REMOVE : 1"]
			},
			"response": ["REMOVE : 1"]
		},
		"test_only_chassis_ip":
		{
			"auto_run": true,
			"description": "Search using only chassis ip, check that that it's found",
			"payload":
			{
				"REMOVE": ["credential", "deviceType"],
				"ips": ["REMOVE : 0"]
			},
			"response": ["REMOVE : 0"]
		},
		"test_server_and_chassis":
		{
			"auto_run": true,
			"description": "Send default payload to search for sever and chassis, check that both are found"
		},
		"test_no_deviceType":
		{
			"auto_run": true,
			"description": "Set deviceType to empty list, Check that all devices are found",
			"payload":
			{
				"deviceType": ["REMOVE : all"]
			}
		},
		"test_empty_deviceType":
		{
			"auto_run": true,
			"description": "Remove deviceType, Check that all devices are found",
			"payload":
			{
				"REMOVE": ["deviceType"]
			}
		},
		"test_nonexistent_server_ip":
		{
			"auto_run": true,
			"description": "Send nonexistent server ip, check that only chassis is found",
			"payload":
			{
				"ips":
				[
					"COMBINE : 0",
					"100.100.100.100"
				]
			},
			"response":
			[
				"COMBINE : 0",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				}
			]
		},
		"test_nonexistent_chassis_ip":
		{
			"auto_run": true,
			"description": "Send nonexistent chassis ip, check that only server is found",
			"payload":
			{
				"ips":
				[
					"COMBINE : 1",
					"100.100.100.100"
				]
			},
			"response":
			[
				"COMBINE : 1",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				}
			]
		},
		"test_nonexistent_server_and_chassis_ip":
		{
			"auto_run": true,
			"description": "Send nonexistent chassis and server ip, check that nothing is found",
			"payload":
			{
				"ips":
				[
					"COMBINE : 0,1",
					"100.100.100.100",
					"100.100.100.100"
				]
			},
			"response":
			[
				"COMBINE : 0,1",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				},
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				}
			]
		},
		"test_bad_server_ip":
		{
			"auto_run": true,
			"description": "Send bad server ip, check that only chassis is found",
			"payload":
			{
				"ips":
				[
					"COMBINE : 0",
					"foobar"
				]
			},
			"response":
			[
				"COMBINE : 0",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				}
			]
		},
		"test_bad_chassis_ip":
		{
			"auto_run": true,
			"description": "Send bad chassis ip, check that only server is found",
			"payload":
			{
				"ips":
				[
					"COMBINE : 1",
					"foobar"
				]
			},
			"response":
			[
				"COMBINE : 1",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				}
			]
		},
		"test_bad_server_and_chassis_ip":
		{
			"auto_run": true,
			"description": "Send bad chassis and server ip, check that nothing is found",
			"payload":
			{
				"ips":
				[
					"COMBINE : 0,1",
					"foobar",
					"foobar"
				]
			},
			"response":
			[
				"COMBINE : 0,1",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				},
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 0,
					        "discoveredDeviceInfoList": ["REMOVE : all"]
                        }
                    ]
				}
			]
		},
		"test_bad_credentials":
		{
			"auto_run": true,
			"description": "Send bad chassis and server ip, check that nothing is found",
			"payload":
			{
				"credential":
				{
					"userName": "foo",
					"password": "bar"
				}
			},
			"response":
			[
				"COMBINE : 0,1",
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 1,
					        "discoveredDeviceInfoList":
							[
								"COMBINE : 0",
								{
									"status": "DEVICE_DISCOVERED_SUMMARY_FAILED"
								}
							]
                        }
                    ]
				},
				{
                    "discoveredDeviceList":
                    [
                        "COMBINE : 0",
                        {
					        "discovered": 1,
					        "discoveredDeviceInfoList":
							[
								"COMBINE : 0",
								{
									"status": "DEVICE_DISCOVERED_SUMMARY_FAILED"
								}
							]
                        }
                    ]
				}
			]
		}
    },
	

    "range": 
    {
		"test_base":
		{
			"path": "/api/1.0/discover/range",
			"payload":
			{
				"credential":
				{
					"userName": "root",
					"password": "calvin"
				},
				"discoverIpRangeDeviceRequests":
				[
					{
						"deviceType": 
						[
							"SERVER",
							"CHASSIS"
						],
						"deviceStartIp": "100.68.124.95",
						"deviceEndIp": "100.68.124.98"
					}
				]
			},
			"response":
			[
				{
					"deviceGroup": "SERVER",
					"discoveredDeviceList":
					[
						{
							"deviceName": "IDRAC8",
							"discovered": 1,
							"discoveredDeviceInfoList":
							[
								{
									"ipAddress": "100.68.124.95",
									"status": "SUCCESS"
								}
							]
						}
					]
				},
				{
					"deviceGroup": "CHASSIS",
					"discoveredDeviceList":
					[
						{
							"deviceName": "CMC_FX2",
							"discovered": 2,
							"discoveredDeviceInfoList":
							[
								{
									"ipAddress": "100.68.124.98",
									"status": "SUCCESS"
								},
								{
									"ipAddress": "100.68.124.97",
									"status": "SUCCESS"
								}
							]
						}
					]
				}
			]
		},
		"test_only_server":
		{
			"auto_run": true,
			"description": "Use same range but only search for server, specify credential, check for server",
			"payload":
			{
				"discoverIpRangeDeviceRequests": 
				[
					"COMBINE : 0",
					{
						"deviceType": ["REMOVE : 1"],
						"credential": 
						{
							"userName": "root",
							"password": "calvin"
						}
					}
				]
			},
			"response": ["REMOVE : 1"]
		},
		"test_only_chassis":
		{
			"auto_run": true,
			"description": "Use same range but only search for chassis, specify credential, check for chassis",
			"payload":
			{
				"discoverIpRangeDeviceRequests": 
				[
					"COMBINE : 0",
					{
						"deviceType": ["REMOVE : 0"]
					}
				]
			},
			"response": ["REMOVE : 0"]
		},
		"test_server_and_chassis":
		{
			"auto_run": true,
			"description": "Send default payload to search range, check that server and chassis are found"
		},
		"test_empty_deviceType":
		{
			"auto_run": true,
			"description": "Send empty deviceType, check that server and chassis are found",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceType": ["REMOVE : all"]
					}
				]
			}
		},
		"test_no_deviceType":
		{
			"auto_run": true,
			"description": "Send empty deviceType, check that server and chassis are found",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"REMOVE": ["deviceType"]
					}
				]
			}
		},
		"test_only_ip_range":
		{
			"auto_run": true,
			"description": "Use same range but only search for chassis, specify credential, check for chassis",
			"payload":
			{
				"REMOVE": ["credential"]
			}
		},
		"test_johnny_custom_credential":
		{
			"auto_run": true,
			"description": "Check for range with machine with custom credentials johnny dangerous, check that other machines fail",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceStartIp": "100.68.123.162",
						"deviceEndIp": "100.68.123.164",
						"credential":
						{
							"userName": "johnny",
							"password": "dangerous"
						}
					}
				]
			},
			"response": 
			[
				"REMOVE : 1",
				"COMBINE : 0",
				{
					"discoveredDeviceList":
					[
						"COMBINE : 0",
						{
							"discovered": 2,
							"discoveredDeviceInfoList":
							[
								"COMBINE : 0",
								{
									"ipAddress": "100.68.123.163"
								},
								{
									"ipAddress": "100.68.123.162",
									"status": "DEVICE_DISCOVERED_SUMMARY_FAILED"
								}
							]
						}
					]
				}
			]
		},
		"test_larger_start_ip":
		{
			"auto_run": true,
			"description": "Pass in larger start ip than end ip, check for failure",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceStartIp": "100.68.124.99"
					}
				]
			},
			"status_code": ["400"],
            "response": {"REMOVE": ["all"]}
		},
		"test_smaller_end_ip":
		{
			"auto_run": true,
			"description": "Pass in larger start ip than end ip, check for failure",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceEndIp": "100.68.124.20"
					}
				]
			},
			"status_code": ["400"],
            "response": {"REMOVE": ["all"]}
		},
		"test_bad_start_ip":
		{
			"auto_run": true,
			"description": "Pass in invalid start ip, check for failure",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceStartIp": "foo"
					}
				]
			},
			"status_code": ["400"],
            "response": {"REMOVE": ["all"]}
		},
		"test_bad_end_ip":
		{
			"auto_run": true,
			"description": "Pass in invalid end ip, check for failure",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceEndIp": "foo"
					}
				]
			},
			"status_code": ["400"],
            "response": {"REMOVE": ["all"]}
		},
		"test_bad_ip_range":
		{
			"auto_run": true,
			"description": "Pass in invalid start and end ip, check for failure",
			"payload":
			{
				"discoverIpRangeDeviceRequests":
				[
					"COMBINE : 0",
					{
						"deviceStartIp": "foo",
						"deviceEndIp": "bar"
					}
				]
			},
			"status_code": ["400"],
            "response": {"REMOVE": ["all"]}
		}
    }

}
